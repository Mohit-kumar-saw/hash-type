// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model to store basic user information
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?  
  email     String?   @unique
  hashedPassword String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  profile   Profile?
  accounts Account[]
  sessions  TypingSession[]
}


model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?


  user User @relation(fields: [userId], references: [id], onDelete : Cascade)

  @@unique([provider,providerAccountId])
}


// Profile model to store additional user profile information
model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  bio       String?
  avatarUrl String?

  user      User     @relation(fields: [userId], references: [id])
}

// TypingSession model to store typing performance information (WPM, accuracy, etc.)
model TypingSession {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  wpm       Float    // Words per minute
  accuracy  Float    // Accuracy percentage
  duration  Int      // Session duration in seconds
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

